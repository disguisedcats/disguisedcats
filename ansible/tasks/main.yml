# install nginx

- name: Install nginx
  apt:
    name: nginx
    state: present
    update_cache: yes
  become: yes

# install certbot

- name: Ensure snapd is installed.
  package:
    name: snapd
    state: present
  register: snapd_install

- name: Ensure snapd is enabled.
  systemd:
    name: snapd.socket
    enabled: true
    state: started

- name: Enable classic snap support.
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link
  when: ansible_os_family != "Debian"

- name: Update snap after install.
  shell: snap install core; snap refresh core
  changed_when: true
  failed_when: false
  when: snapd_install is changed

- name: Install certbot via snap.
  snap:
    name: certbot
    classic: true

# check cert

- name: Check if certificate already exists for cms domain
  stat:
    path: "/etc/letsencrypt/live/{{ domain }}/cert.pem"
  register: cms_cert

- name: Generate new certificate for app
  command: "certbot certonly --nginx --noninteractive --agree-tos --email {{ email }} --domains {{ domain }}"
  when: not app_cert.stat.exists

# generate site config for domain

- name: Generate site config for app
  template:
    src: "site.conf.j2"
    dest: "/etc/nginx/sites-available/{{ domain }}"
  notify: restart nginx

# run docker-compose

